# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# 关闭未使用主规格仓库的警告
install! 'cocoapods', :warn_for_unused_master_specs_repo => false

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # 设置最低部署目标为12.0，解决Swift兼容性问题
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      # 启用模块化头文件以解决Swift相关问题
      config.build_settings['DEFINES_MODULE'] = 'YES'
      # 确保Swift版本兼容性
      config.build_settings['SWIFT_VERSION'] = '5.0'
      # 禁用bitcode
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      # 针对arm64架构做特殊处理
      if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 12.0
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      end
      
      # 允许在后台运行
      if target.name == 'path_provider_foundation'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BACKGROUND_EXECUTION_ENABLED=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'SWIFT_DISABLE_SAFETY_CHECKS=1'
        
        # 强制使用完整优化
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
        
        # 使用动态加载以避免启动时链接问题
        config.build_settings['DYLD_PRINT_STATISTICS'] = 'YES'
      end
      
      # 为url_launcher_ios添加类似的配置
      if target.name == 'url_launcher_ios'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BACKGROUND_EXECUTION_ENABLED=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'SWIFT_DISABLE_SAFETY_CHECKS=1'
        
        # 强制使用完整优化
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
        
        # 使用动态加载以避免启动时链接问题
        config.build_settings['DYLD_PRINT_STATISTICS'] = 'YES'
        
        # 增加启动时安全性
        config.build_settings['OTHER_SWIFT_FLAGS'] = '$(inherited) -Xfrontend -enable-objc-interop'
      end
    end
  end
end
